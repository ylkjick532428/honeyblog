[{"title":"install elasticsearch on linux","date":"2017-04-18T01:57:00.000Z","path":"/install-elasticsearch-on-linux/","text":"Linux安装elasticsearch配置参考下载http://172.16.60.100/tools/elasticsearch/ 配置好JAVA_HOME需要jkd1.7以上版本, 配置好JAVA_HOME ES 5.3yum安装rpm包yum install elasticsearch-5.3.0.rpmyum install kibana-5.3.0-x86_64.rpm 配置文件#/etc/elasticsearch/elasticsearch.yml network.host: 127.0.0.1http.port: 9200同样的将Kibana 也设为localhost only #/etc/kibana/kibana.yml server.port: 5601server.host: “127.0.0.1”设定完成后记得重开Kibana 和Elasticsearch 才会生效哦，可以检查一下是否在外网真的无法连线。 管理服务service elasticsearch start|stop|restartservice kibana start|stop|restart 开机启动chkconfig elasticsearch onchkconfig kibana on bin文件安装ES 1.4.5使用bin文件安装 nginx配置nginx配置http://localhost:4000/linux-install-nginx/#nginx-basic-认证文件生成 testdfhdfi","link":"","permalink":"https://qooeo.netinstall-elasticsearch-on-linux/","tags":[{"name":"linux","slug":"linux","permalink":"https://qooeo.net/tags/linux/"},{"name":"elasticsearch","slug":"elasticsearch","permalink":"https://qooeo.net/tags/elasticsearch/"}]},{"title":"flowchat","date":"2017-04-12T01:25:46.000Z","path":"/flowchat/","text":"$$E=mc^2$$ $$\\sum_{i=1}^n a_i=0$$$$\\sum ^ {j-1}{k=0}{\\widehat{\\gamma} {kj} z k } $$ $$\\Gamma(z) = \\int_0^\\infty t^{z-1}e^{-t}dt\\,.$$ @found \"You\", -> @message \"Think\", -> @message \"Write your idea\", \"JUMLY\", -> @create \"Diagram\"","link":"","permalink":"https://qooeo.netflowchat/","tags":[{"name":"公式","slug":"公式","permalink":"https://qooeo.net/tags/公式/"},{"name":"时序图","slug":"时序图","permalink":"https://qooeo.net/tags/时序图/"},{"name":"流程图","slug":"流程图","permalink":"https://qooeo.net/tags/流程图/"}]},{"title":"linux-common-comand","date":"2017-04-11T02:00:57.000Z","path":"/linux-common-comand/","text":"linux 一些命令工具nginx basic 认证文件生成12yum install httpd-toolshtpasswd -c 生成的认证文件名 用户名 字符串搜索12grep -Ril &apos;搜索内容&apos; ./ ./搜索当前目录","link":"","permalink":"https://qooeo.netlinux-common-comand/","tags":[{"name":"linux常用命令","slug":"linux常用命令","permalink":"https://qooeo.net/tags/linux常用命令/"}]},{"title":"cabot install","date":"2017-03-29T05:28:59.000Z","path":"/cabot-install/","text":"cabot 安装环境 centos6.5 64 python: 2.7 python2.7 安装参考graphite-install-on-centos cabot安装参考https://gist.github.com/Gromph/5f4db73b0f38775bc2f0#file-gistfile1-txt-L35http://blog.gaoyuan.xyz/2014/10/01/use-graphite-and-alter-build-monitor-system/ 安装依赖yum install -y openldap openldap-devel libffi libffi-devel mysql-server mysql-devel 安装mysql创建mysql用户1234567891011create database if not exists cabot default character set utf8;GRANT ALL PRIVILEGES ON `cabot`.* TO &apos;cabot&apos;@&apos;%&apos; IDENTIFIED BY &apos;cabot&apos;;SET old_passwords = 0;UPDATE mysql.user SET Password = PASSWORD(&apos;cabot&apos;) WHERE User = &apos;weibo&apos; limit 1;SELECT LENGTH(Password) FROM mysql.user WHERE User = &apos;cabot&apos;; FLUSH PRIVILEGES;GRANT ALL PRIVILEGES ON `cabot`.* TO &apos;cabot&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;cabot&apos;; 测试msyql用户mysql -ucabot -pcabot 特别说明foreman命令使用隐藏文件.foremanforeman为ruby的工具,需要安装ruby才能使用用来把不同的配置文件写入环境变量中,可以不使用12345# vi: set ft=yaml :procfile: Procfile.dev#env: conf/development.env 开发环境env: conf/production.env #正式环境 sh -ac ‘ . ./conf/production.env …是把production.env 写入运行时环境变量,然后运行和foreman同样的意思 syncdb django 1.9 已经抛弃, 使用migrate123sh -ac &apos; . ./conf/production.env; python2.7 manage.py migrate&apos;sh -ac &apos; . ./conf/production.env; python2.7 manage.py collectstatic --noinput&apos;sh -ac &apos; . ./conf/production.env; python2.7 manage.py compress&apos; 安装123cd /var/wwwwget http://ip/software_new/cabot.tartar -vxf cabot.tar /var/www/cabot/requir_lib 是python依赖用于离线安装 安装依赖 requirements.txt1234567891011121314151617181920212223242526272829303132333435363738394041coverage==4.2django_coverage_plugin==1.4.2mock==1.0.1sqlalchemy==1.1.5ipdbamqp&lt;2.0anyjson==0.3.3argparse==1.2.1celery[redis]==3.1.23dj-database-url==0.4.2django-appconf==1.0.2django-auth-ldap==1.2.6django-celery==3.1.17django-compressor==2.1.1django-filter==1.0.1django-jsonify==0.3.0django-mptt==0.6.0django-polymorphic==1.1Django&gt;=1.9,&lt;1.10djangorestframework&gt;=3.5,&lt;3.6freezegun==0.3.8gevent==1.0.1gunicorn==19.6.0httplib2==0.7.7icalendar==3.2Markdown==2.5ndg-httpsclient==0.4.2psycogreen==1.0psycopg2==2.5.1pyasn1==0.1.9PyJWT==0.1.2pyOpenSSL==16.1.0python-dateutil==2.1pytz==2014.10requests==2.7.0twilio==3.4.1whitenoise==3.3.0wsgiref==0.1.2cabot_alert_email==1.4.3cabot_alert_hipchat==1.8.3cabot_alert_twilio==1.3.0 修改配置123cd /var/www/cabot/confcp production.env.example production.envvim /var/www/cabot/conf/production.env redis配置redis 安装123# Django settingsCELERY_BROKER_URL=redis://:vastio@172.16.60.201:6379/1DJANGO_SECRET_KEY=2FL6ORhHwr5eX34pP9mMugnIOd3jzVuT45f7w430Mt5PnEwbcJgma0q8zUXNZ68A graphite配置graphite 安装123GRAPHITE_API=http://127.0.0.1:81/GRAPHITE_USER=vastioGRAPHITE_PASS=vastio 启动手动启动cd /var/www/cabot1sh -ac &apos; . ./conf/production.env; nohup python2.7 manage.py runserver 0.0.0.0:8000 &gt; run.log &amp;&apos; 自动启动start.sh12345678PROJECT_HOME=/var/www/cabotcd $PROJECT_HOMEsource /etc/profile#依赖数据库,等10ssleep 10ssh -ac &apos; . ./conf/production.env; nohup python2.7 manage.py runserver 0.0.0.0:8000 &gt; run.log &amp;&apos;#nohup python2.7 manage.py runserver 0.0.0.0:8000 &gt; run.log &amp; vim /etc/rc.local1bash /var/www/cabot/start.sh","link":"","permalink":"https://qooeo.netcabot-install/","tags":[{"name":"cabot","slug":"cabot","permalink":"https://qooeo.net/tags/cabot/"},{"name":"监控","slug":"监控","permalink":"https://qooeo.net/tags/监控/"}]},{"title":"luigi install","date":"2017-03-29T05:14:37.000Z","path":"/luigi-install/","text":"luigi 安装官方文档: http://luigi.readthedocs.io/en/latest/中文: https://github.com/17zuoye/luiti/blob/master/README.zh_CN.markdown http://blog.kissdata.com/2014/05/28/lugi.html#configuration 安装系统: centos 6.5 64python: 2.7python2.7 安装参考graphite-install-on-centos #启动luigi服务端默认端口: 8082/usr/local/python27/bin/luigid --background 123456789101112131415161718[root@localhost luigi]# luigid -husage: luigid [-h] [--background] [--pidfile PIDFILE] [--logdir LOGDIR] [--state-path STATE_PATH] [--address ADDRESS] [--unix-socket UNIX_SOCKET] [--port PORT]Central luigi serveroptional arguments: -h, --help show this help message and exit --background Run in background mode --pidfile PIDFILE Write pidfile --logdir LOGDIR log directory --state-path STATE_PATH Pickled state file --address ADDRESS Listening interface --unix-socket UNIX_SOCKET Unix socket path --port PORT Listening port","link":"","permalink":"https://qooeo.netluigi-install/","tags":[{"name":"监控","slug":"监控","permalink":"https://qooeo.net/tags/监控/"},{"name":"luigi","slug":"luigi","permalink":"https://qooeo.net/tags/luigi/"}]},{"title":"centos repo","date":"2017-03-29T04:11:10.000Z","path":"/centos-repo/","text":"公司centos源centos源列表(翻墙): https://www.centos.org/download/mirrors/epel源列表(翻墙): https://fedoraproject.org/wiki/EPEL163源: http://mirrors.163.com/.help/centos.html 网路安装服务器172.16.60.203 centos6.5centos6 源12345[vastio_centos6.5]name=install centos6.5baseurl=http://172.16.60.203/centos6.5/enabled=1gpgcheck=0 epel6 源12345[vastio_epel6.8]name=install epel6.8baseurl=http://172.16.60.100/epel/enabled=1gpgcheck=0 centos7 源12345[vastio_centos7]name=install centos7baseurl=http://172.16.60.203/centos7/enabled=1gpgcheck=0 hadoop源 ambari12345678910111213141516171819[vastio_ambari2.4]name=install ambari2.4baseurl=http://172.16.60.100/ambari/ambari2.4/AMBARI-2.4.2.0/centos6/2.4.2.0-136/enabled=1gpgcheck=0[HDP-2.5]name=HDP-2.5baseurl=http://172.16.60.100/ambari/ambari2.4/HDP/centos6path=/enabled=1gpgcheck=0[HDP-UTILS-1.1.0.21]name=HDP-UTILS-1.1.0.21baseurl=http://172.16.60.100/ambari/ambari2.4/HDP-UTILS-1.1.0.21/repos/centos6path=/enabled=1gpgcheck=0 yum 使用官方源使用代理加速vim /etc/yum.conf1http_proxy=&quot;http://172.16.60.151:1080&quot;","link":"","permalink":"https://qooeo.netcentos-repo/","tags":[{"name":"centos","slug":"centos","permalink":"https://qooeo.net/tags/centos/"},{"name":"yum","slug":"yum","permalink":"https://qooeo.net/tags/yum/"}]},{"title":"graphite install on centos","date":"2017-03-29T02:04:21.000Z","path":"/graphite-install-on-centos/","text":"graphite 安装环境 centos6.5 64 python: 2.7公司机器: 172.16.60.139 参考客户端: graphitesend 中文文档:https://segmentfault.com/search?q=Graphite+%E7%B3%BB%E5%88%97+%235https://lanjingling.github.io/2016/04/04/graphite-1/官网文档: graphite 安装python2.7123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116echo &quot;配置yum源&quot;cd /etc/yum.repos.d/rm -rf *wget http://172.16.60.100/vastio6.repowget http://172.16.60.100/CentOS6-Base-163.repoecho &quot;清空yum缓存&quot;yum clean allecho &quot;安装编译环境&quot;mkdir /root/softwarecd /root/softwarerm -rf *yum -y install libgfortranyum -y install gcc-gfortranyum -y install gcc gcc-c++yum -y install readline-develyum -y install libXt-develyum -y install openssl openssl-devel pcre pcre-devel#centos6.5 openssl 有bug 升级wget http://172.16.60.100/ambari/openssl-1.0.1e-48.el6_8.4.x86_64.rpmwget http://172.16.60.100/ambari/openssl-devel-1.0.1e-48.el6_8.4.x86_64.rpmyum install openssl* -yecho &quot;安装oracle client&quot;wget http://172.16.60.100/software_new/pps/oracle-instantclient11.2-basic-11.2.0.3.0-1.x86_64.rpmwget http://172.16.60.100/software_new/oracle-instantclient11.2-devel-11.2.0.3.0-1.x86_64.rpmwget http://172.16.60.100/software_new/oracle-instantclient11.2-sqlplus-11.2.0.3.0-1.x86_64.rpmyum -y install oracle-instantclient11.2-*echo &quot;编译安装 python2.7&quot;wget http://172.16.60.100/tools/python/Python-2.7.13.tgztar -vxf Python-2.7.13.tgzcd Python-2.7.13./configure --prefix=/usr/local/python27 --with-ssl --with-ssl-libmake &amp;&amp; make installecho &quot;安装 pip工具&quot;wget http://172.16.60.100/pypi/pip-9.0.1.tar.gztar -vxf pip-9.0.1.tar.gzcd pip-9.0.1/usr/local/python27/bin/python2.7 setup.py installmkdir -p ~/.pipecho &quot;pip 源&quot;echo &quot;http://pypi.douban.com/simple/ 豆瓣http://pypi.hustunique.com/simple/ 华中理工大学http://pypi.sdutlinux.org/simple/ 山东理工大学http://pypi.mirrors.ustc.edu.cn/simple/ 中国科学技术大学http://mirrors.aliyun.com/pypi/simple/ 阿里云pip3 install -i http://172.16.60.100/pypi/simple/ --trusted-host=172.16.60.100 cx_Oraclepip3 install -i http://pypi.douban.com/simple/ --trusted-host=pypi.douban.com xml编辑linux ~/.pip/pip.confwindow ~/.pip/pip.ini&quot;echo &quot;[global]timeout = 60#index-url = http://172.16.60.100/pypi/simple/index-url = http://mirrors.aliyun.com/pypi/simple/#trusted-host = 172.16.60.100trusted-host = mirrors.aliyun.com&quot; &gt; ~/.pip/pip.confecho &quot;安装python 常用包&quot;/usr/local/python27/bin/pip2.7 install CherryPy/usr/local/python27/bin/pip2.7 install Mako/usr/local/python27/bin/pip2.7 install MarkupSafe/usr/local/python27/bin/pip2.7 install PyMySQL/usr/local/python27/bin/pip2.7 install PyYAML/usr/local/python27/bin/pip2.7 install Routes/usr/local/python27/bin/pip2.7 install SOAPpy/usr/local/python27/bin/pip2.7 install SQLAlchemy/usr/local/python27/bin/pip2.7 install beautifulsoup4/usr/local/python27/bin/pip2.7 install cx_Oracle/usr/local/python27/bin/pip2.7 install defusedxml/usr/local/python27/bin/pip2.7 install elasticsearch/usr/local/python27/bin/pip2.7 install get/usr/local/python27/bin/pip2.7 install graphite/usr/local/python27/bin/pip2.7 install jieba/usr/local/python27/bin/pip2.7 install lxml/usr/local/python27/bin/pip2.7 install pygrametl/usr/local/python27/bin/pip2.7 install pyhs2/usr/local/python27/bin/pip2.7 install pyodbc/usr/local/python27/bin/pip2.7 install pyodbc/usr/local/python27/bin/pip2.7 install repoze.lru/usr/local/python27/bin/pip2.7 install requests/usr/local/python27/bin/pip2.7 install rinse/usr/local/python27/bin/pip2.7 install router/usr/local/python27/bin/pip2.7 install rpy2/usr/local/python27/bin/pip2.7 install sasl/usr/local/python27/bin/pip2.7 install setuptools/usr/local/python27/bin/pip2.7 install six/usr/local/python27/bin/pip2.7 install structlog/usr/local/python27/bin/pip2.7 install thrift/usr/local/python27/bin/pip2.7 install thrift/usr/local/python27/bin/pip2.7 install tzlocal/usr/local/python27/bin/pip2.7 install urllib3/usr/local/python27/bin/pip2.7 install uwsgi/usr/local/python27/bin/pip2.7 install wstools/usr/local/python27/bin/pip2.7 install xmltodict/usr/local/python27/bin/pip2.7 install backports_abc/usr/local/python27/bin/pip2.7 install certifi/usr/local/python27/bin/pip2.7 install docutils/usr/local/python27/bin/pip2.7 install lockfile/usr/local/python27/bin/pip2.7 install luigi/usr/local/python27/bin/pip2.7 install pbr/usr/local/python27/bin/pip2.7 install singledispatch/usr/local/python27/bin/pip2.7 install tornado/usr/local/python27/bin/pip2.7 install graphitesend/usr/local/python27/bin/pip2.7 install python-dateutil/usr/local/python27/bin/pip2.7 install simplejson/usr/local/python27/bin/pip2.7 install argparse/usr/local/python27/bin/pip2.7 install cx_Freeze 配置环境变量vim /etc/profile1234567891011#PYTHON27 环境变量export PYTHON_HOME=/usr/local/python27export PATH=PYTHON_HOME/bin:PATH#oralce client 环境变量export ORACLE_SID=orclexport ORACLE_HOME=/usr/lib/oracle/11.2/client64export TNS_ADMIN=/usr/lib/oracle/11.2/client64export NLS_LANG=AMERICAN_AMERICA.AL32UTF8export LD_LIBRARY_PATH=$ORACLE_HOME/lib:/usr/lib:/usr/local/libexport PATH=$PATH:$ORACLE_HOME/bin:$ORACLE_HOME/lib source /etc/profile /usr/local/python27/bin/pip2.7 install cx_Oracle 安装graphite1234cd ~wget http://172.16.60.100/software_new/graphite_git.tartar -vxf graphite_git.tarcd graphite_git 安装graphite组件, 按顺序安装cereswhispercarbongraphite-web 批量下载依赖的方法cabot 依赖也是同理无法连接互联网需要手动下载依赖,每个组件都有依赖requirements.txt市局的组件依赖可以使用该办法解决1234567mkdir require_libcat carbon/requirements.txt &gt; require_lib/requirements.txtcat ceres/test_requirements.txt &gt;&gt; require_lib/requirements.txtcat whisper/requirements.txt &gt;&gt; require_lib/requirements.txtcat graphite-web/requirements.txt &gt;&gt; require_lib/requirements.txtcd require_libpip2.7 download -r requirements.txt 配置graphitegraphite 安装目录 /opt/graphitegraphite 配置目录 /opt/graphite/conf 12345678910111213cd /opt/graphite/confcp aggregation-rules.conf.example aggregation-rules.confcp blacklist.conf.example blacklist.confcp carbon.amqp.conf.example carbon.amqp.confcp carbon.conf.example carbon.confcp dashboard.conf.example dashboard.confcp graphite.wsgi.example graphite.wsgicp graphTemplates.conf.example graphTemplates.confcp relay-rules.conf.example relay-rules.confcp rewrite-rules.conf.example rewrite-rules.confcp storage-aggregation.conf.example storage-aggregation.confcp storage-schemas.conf.example storage-schemas.confcp whitelist.conf.example whitelist.conf storage-schemas.confretentions配置先使用whisper-create.py test.wsp 10s:7d 60s:180d 3600s:360d测试否则可能不正确whisper-info.py test.wsp文件123[vastio]pattern = ^vastio\\.retentions = 10s:7d,60s:180d,3600s:360d 启动vim /opt/graphite/webapp/graphite/settings.py主要修改STATIC_ROOT = ‘/opt/graphite/webapp’该目录下有graphite运行的依赖static 或contentSTATIC_URL = ‘/static/‘TIME_ZONE=’Asia/Shanghai’ 时区 bash /opt/graphite/webapp/start.shdjango-admin.py 需要配置在环境变量中,python2 和python3 请注意不要冲突 bash /opt/graphite/webapp/start.sh123cd /opt/graphite/webappexport PYTHONPATH=/opt/graphite/webapp/nohup django-admin.py runserver --settings=graphite.settings 0.0.0.0:8001 &gt; graphite.log &amp; 结合nginx 做前置nginx 安装1234567891011121314151617181920212223242526272829server &#123; listen 81; server_name localhost; #charset koi8-r; #access_log logs/host.access.log main; location / &#123; proxy_pass http://127.0.0.1:8001; proxy_redirect off; proxy_set_header HOST $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; client_max_body_size 10m; client_body_buffer_size 128k; proxy_connect_timeout 90; proxy_send_timeout 90; proxy_read_timeout 90; proxy_buffer_size 4k; proxy_buffers 4 32k; proxy_busy_buffers_size 64k; proxy_temp_file_write_size 64k; &#125; location /static &#123; root /opt/graphite/webapp; &#125; &#125; 启动caborncd /opt/graphite/binpython2.7 carbon-cache.py start vim /opt/graphite/bin/start.sh12cd /opt/graphite/bin/usr/local/python27/bin/python2.7 /opt/graphite/bin/carbon-cache.py start 开机启动vim /etc/rc.local1234#启动carbonbash /opt/graphite/bin/start.sh#启动graphite-webbash /opt/graphite/webapp/start.sh","link":"","permalink":"https://qooeo.netgraphite-install-on-centos/","tags":[{"name":"监控","slug":"监控","permalink":"https://qooeo.net/tags/监控/"},{"name":"graphite","slug":"graphite","permalink":"https://qooeo.net/tags/graphite/"}]},{"title":"linux install nginx","date":"2017-03-27T08:18:41.000Z","path":"/linux-install-nginx/","text":"linux 安装nginx一键安装 wget http://ip/tools/nginx/nginx-1.10.2.tar.gz tar -vxf nginx-1.10.2.tar.gz cd nginx-1.10.2 ./configure --prefix=/usr/local/nginx yum -y install openssl openssl-devel pcre pcre-devel gcc dos2unix make &amp;&amp; make install cd /etc/init.d/ curl http://ip/tools/nginx/nginx.auto.startup &gt; nginx dos2unix nginx chmod -R 777 /etc/init.d/nginx chkconfig nginx on service nginx start 配置文件/usr/local/nginx/conf/nginx.conf 启动service nginx start/usr/local/nginx/sbin/nginx 关闭service nginx stop/usr/local/nginx/sbin/nginx -s stop 重启service nginx restart/usr/local/nginx/sbin/nginx -s restart nginx basic 认证文件生成12yum install httpd-toolshtpasswd -c 生成的认证文件名 用户名 自动启动脚本nginx.auto.startup123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106#!/bin/sh## nginx - this script starts and stops the nginx daemin## chkconfig: - 85 15# description: Nginx is an HTTP(S) server, HTTP(S) reverse \\# proxy and IMAP/POP3 proxy server# processname: nginx# config: /usr/local/nginx/conf/nginx.conf# pidfile: /usr/local/nginx/logs/nginx.pid# Source function library.. /etc/rc.d/init.d/functions# Source networking configuration.. /etc/sysconfig/network# Check that networking is up.[ &quot;$NETWORKING&quot; = &quot;no&quot; ] &amp;&amp; exit 0nginx=&quot;/usr/local/nginx/sbin/nginx&quot;prog=$(basename $nginx)NGINX_CONF_FILE=&quot;/usr/local/nginx/conf/nginx.conf&quot;lockfile=/var/lock/subsys/nginxstart() &#123;[ -x $nginx ] || exit 5[ -f $NGINX_CONF_FILE ] || exit 6echo -n $&quot;Starting $prog: &quot;daemon $nginx -c $NGINX_CONF_FILEretval=$?echo[ $retval -eq 0 ] &amp;&amp; touch $lockfilereturn $retval&#125;stop() &#123;echo -n $&quot;Stopping $prog: &quot;killproc $prog -QUITretval=$?echo[ $retval -eq 0 ] &amp;&amp; rm -f $lockfilereturn $retval&#125;restart() &#123;configtest || return $?stopstart&#125;reload() &#123;configtest || return $?echo -n $&quot;Reloading $prog: &quot;killproc $nginx -HUPRETVAL=$?echo&#125;force_reload() &#123;restart&#125;configtest() &#123;$nginx -t -c $NGINX_CONF_FILE&#125;rh_status() &#123;status $prog&#125;rh_status_q() &#123;rh_status &gt;/dev/null 2&gt;&amp;1&#125;case &quot;$1&quot; instart)rh_status_q &amp;&amp; exit 0$1;;stop)rh_status_q || exit 0$1;;restart|configtest)$1;;reload)rh_status_q || exit 7$1;;force-reload)force_reload;;status)rh_status;;condrestart|try-restart)rh_status_q || exit 0;;*)echo $&quot;Usage: $0 &#123;start|stop|status|restart|condrestart|try-restart|reload|force-reload|configtest&#125;&quot;exit 2esac","link":"","permalink":"https://qooeo.netlinux-install-nginx/","tags":[{"name":"linux","slug":"linux","permalink":"https://qooeo.net/tags/linux/"},{"name":"nginx","slug":"nginx","permalink":"https://qooeo.net/tags/nginx/"}]},{"title":"private docker server","date":"2017-03-27T07:40:09.000Z","path":"/private-docker-server/","text":"搭建docker私有服务器公司: 172.16.60.204系统: centos 7 1611版本python: 系统自带2.7.5docker-registry功能增强: Harbor 国内镜像使用http://www.cnblogs.com/anliven/p/6218741.htmlDaoCloud - Docker加速器阿里云 - 开发者平台微镜像 - 希云cSphere镜像广场 - 时速云灵雀云网易蜂巢 环境要求docker 需要linux 3.10的内核,centos7centos6.5内核为2.6.32不再支持docker客户端在centos6.5不支持docker 环境要求 准备yum源yum install -y gcc python-devel python-pip openssl openssl-devel pcre pcre-devel lzma lzma-devel xz xz-devel swig 下载添加docker用户和目录为了安全起见，我们可以添加一个用户docker，使用这个非root用户来允许docker registry程序，同时指定好docker镜像的存储位置，本处指定为/home/docker_registry目录123useradd dockermkdir -p /home/docker_registrychown -R docker.docker /home/docker_registry/ 从github克隆最新版本registry, 进入这个目录下的config子目录，从模板复制一个配置文件出来：123git clone https://github.com/docker/docker-registry.gitcd docker-registry/configcp config_sample.yml config.yml 此时可以修改这个config.yml配置文件，需要注意修改以下的两个地方：123456#配置sqlite数据库位置sqlalchemy_index_database: _env:SQLALCHEMY_INDEX_DATABASE:sqlite:////home/docker_registry/docker-registry.db#配置本地存储位置local: &amp;local storage: local storage_path: _env:STORAGE_PATH:/home/docker_registry 修改依赖文件docker-registry/requirements/main.txtM2Crypto==0.25.1 更新pip12345678910111213141516171819202122232425echo &quot;安装 pip工具&quot;wget pip-9.0.1.tar.gztar -vxf pip-9.0.1.tar.gzcd pip-9.0.1python3 setup.py installmkdir -p ~/.pipecho &quot;pip 源&quot;echo &quot;http://pypi.douban.com/simple/ 豆瓣http://pypi.hustunique.com/simple/ 华中理工大学http://pypi.sdutlinux.org/simple/ 山东理工大学http://pypi.mirrors.ustc.edu.cn/simple/ 中国科学技术大学http://mirrors.aliyun.com/pypi/simple/ 阿里云pip3 install -i http://ip/pypi/simple/ --trusted-host=ip cx_Oraclepip3 install -i http://pypi.douban.com/simple/ --trusted-host=pypi.douban.com xml编辑linux ~/.pip/pip.confwindow ~/.pip/pip.ini&quot;echo &quot;[global]timeout = 60#index-url = http://ip/pypi/simple/index-url = http://mirrors.aliyun.com/pypi/simple/#trusted-host = iptrusted-host = mirrors.aliyun.com&quot; &gt; ~/.pip/pip.conf 安装cd docker-registrypip install . 启动mkdir /opt/dockervim start.sh-b 0.0.0.0:5000 使用81端口123cd /opt/dockernohup gunicorn --access-logfile - --error-logfile - -k gevent -b 0.0.0.0:5000 -w 8 --max-requests 100 docker_registry.wsgi:application &gt; dock.log &amp; 配置nginxnginx 安装 123456789101112131415server &#123; listen 80; server_name localhost; proxy_set_header Host $http_host; # required for docker client&apos;s sake proxy_set_header X-Real-IP $remote_addr; # pass on real client&apos;s IP #charset koi8-r; #access_log logs/host.access.log main; location / &#123; proxy_pass http://127.0.0.1:5000; client_max_body_size 1000m; #nginx 文件上次大小限制 &#125; &#125; 关闭防火墙添加端口vi /etc/sysconfig/iptables或systemctl stop firewalld.service 启动service nginx restartbash /opt/docker/start.sh 开机启动vim /etc/rc.local12systemctl stop firewalld.servicebash /opt/docker/start.sh 测试web访问http://172.16.60.204docker-registry server 使用nginx 为例子 下载公有的nginx镜像上次本地仓库 下载docker pull hub.c.163.com/public/nginx:1.2.1docker images 1234[root@localhost docker-dev]# docker imagesREPOSITORY TAG IMAGE ID CREATED SIZEhub.c.163.com/public/nginx 1.2.1 2dc68ff797db 11 months ago 171.5 MBlocalhost/nginx latest 2dc68ff797db 11 months ago 171.5 MB 打上自己的tagdocker tag 2dc6 172.16.60.204/nginx 上传docker push 172.16.60.204/nginx 检查http://172.16.60.204/v1/search 其它机器上使用docker pull 172.16.60.204/nginx","link":"","permalink":"https://qooeo.netprivate-docker-server/","tags":[{"name":"docker","slug":"docker","permalink":"https://qooeo.net/tags/docker/"},{"name":"registry","slug":"registry","permalink":"https://qooeo.net/tags/registry/"}]},{"title":"javascript packages management","date":"2017-03-24T09:23:49.000Z","path":"/javascript-packages-management/","text":"Brunch + Marionette.js + Babel/ES6 PWAThis is a modern Progressive Web App JS skeleton with Marionette.js for Brunch. InstallationClone this repo manually git clone https://github.com/denar90/brunch-with-marionettejs &amp;&amp; cd brunch-with-marionettejs or use brunch new dir -s marionettejs Getting started Install (if you don’t have them): Node.js: brew install node on OS X Brunch: npm install -g brunch npm install -g cnpm --registry=https://registry.npm.taobao.org 之后不翻墙使用cnpm代替npm 淘宝npm* Brunch plugins and app dependencies: npm install Brunch plugins and app dependencies: npm install -g bower bower install Run: brunch watch --server — watches the project with continuous rebuild.This will also launch HTTP server with pushState.There are also added offline feature using sw-precache, sw-precache-brunch, which makes skeleton work offline. brunch build --production — builds minified project for production Learn: public/ dir is fully auto-generated and served by HTTP server. Write your code in app/ dir. Place static files you want to be copied from app/assets/ to public/. Brunch site, Getting started guide Marionette.js site Progressive Web AppsProgressive Web Applications take advantage of new technologies to bring the best of mobile sites and nativeapplications to users. They’re reliable, fast, and engaging. More​ Service WorkerA service worker is a script that your browser runs in the background, separate from a web page, opening the door tofeatures that don’t need a web page or user interaction. More Service Worker Precachesw-precache is a module for generating a service worker that precaches resources.It’s added as part of Brunch plugin sw-pracache-brunch. Web App ManifestThe Manifest for Web applications is a simple JSON file that gives you, the developer, the ability to control how yourapp appears to the user in the areas that they would expect to see apps. More How to try it?It’s hosted on gh-pages - https://denar90.github.io/brunch-with-marionettejs/ Don’t forget to go offline and see what happens P.S. Inspired by @jeffposnick - https://github.com/jeffposnick/create-react-pwa/blob/master/README.md #问题1: this.$(‘.view-content’).niceScroll({ 错误jquery 版本问题 删除 node_modules\\jquery.nicescroll\\node_modules\\jquery","link":"","permalink":"https://qooeo.netjavascript-packages-management/","tags":[{"name":"javascript","slug":"javascript","permalink":"https://qooeo.net/tags/javascript/"},{"name":"npm","slug":"npm","permalink":"https://qooeo.net/tags/npm/"},{"name":"grunt","slug":"grunt","permalink":"https://qooeo.net/tags/grunt/"},{"name":"bower","slug":"bower","permalink":"https://qooeo.net/tags/bower/"}]},{"title":"mysql management","date":"2017-03-24T08:48:27.000Z","path":"/mysql-management/","text":"mysql 管理linux安装yum install mysql mysql-server mysql-devel mysql-libs 配置文件/etc/my.ini 启动service mysqld start|stop|restart 自动启动chkconfig mysqld on 管理mysql 设置数据库引擎引擎差异默认为MYISAM, 某些情况下需要修改为InnoDBmysql&gt; SET storage_engine=InnoDB; 创建用户和授权用户名: weibo数据库: weibo密码: 3c38f920d8bf11c96c09023fe49c89171234567create database if not exists weibo default character set utf8;GRANT ALL PRIVILEGES ON `weibo`.* TO &apos;weibo&apos;@&apos;%&apos; IDENTIFIED BY &apos;3c38f920d8bf11c96c09023fe49c8917&apos;;GRANT ALL PRIVILEGES ON `weibo`.* TO &apos;weibo&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;3c38f920d8bf11c96c09023fe49c8917&apos;;SET old_passwords = 0; UPDATE mysql.user SET Password = PASSWORD(&apos;3c38f920d8bf11c96c09023fe49c8917&apos;) WHERE User = &apos;weibo&apos; limit 1;SELECT LENGTH(Password) FROM mysql.user WHERE User = &apos;weibo&apos;; FLUSH PRIVILEGES; 测试mysql -uweibo -p3c38f920d8bf11c96c09023fe49c8917 windows1234mysqld --romve 删除mysql服务mysqld --install 安装mysql服务mysqld --initialize 一定要初始化net start mysql 启动服务 my.ini12345678910111213141516171819202122232425[mysql]; 设置mysql客户端默认字符集default-character-set=utf8[mysqld];设置3306端口port = 3306; 设置mysql的安装目录basedir=F:\\mysql-5.7.18-winx64; 设置mysql数据库的数据的存放目录datadir=F:\\mysql-5.7.18-winx64\\data; 允许最大连接数max_connections=200; 服务端使用的字符集默认为8比特编码的latin1字符集character-set-server=utf8; 创建新表时将使用的默认存储引擎default-storage-engine=INNODB","link":"","permalink":"https://qooeo.netmysql-management/","tags":[{"name":"mysql","slug":"mysql","permalink":"https://qooeo.net/tags/mysql/"}]},{"title":"oracle management","date":"2017-03-23T08:51:24.000Z","path":"/oracle-management/","text":"oracle 常用管理命令环境变量12345export ORACLE_HOME=/opt/oracle/product/11.2.0/dbhome_1export ORACLE_SID=orcl#export NLS_LANG=AMERICAN_AMERICA.AL32UTF8export LD_LIBRARY_PATH=$ORACLE_HOME/lib:/usr/lib:/usr/local/libexport PATH=$PATH:$ORACLE_HOME/bin:$ORACLE_HOME/lib 进入管理员su oraclesqlplus / as sysdba 密码有效期查看指定概要文件（如default）的密码有效期设置：sql&gt; SELECT * FROM dba_profiles s WHERE s.profile=&#39;DEFAULT&#39; AND resource_name=&#39;PASSWORD_LIFE_TIME&#39;; 将密码有效期由默认的180天修改成“无限制”：sql&gt; ALTER PROFILE DEFAULT LIMIT PASSWORD_LIFE_TIME UNLIMITED; 用户管理创建用户简单创建用户sql&gt; create user 用户名大写 identified by 密码; 创建用户指定表空间和临时空间请结合 创建表空间 看create user 用户名大写 identified by 密码default tablespace 空间名称temporary tablespace 临时空间名称; 授权sql&gt; grant connect, resource, dba to 用户名大写;sql&gt; grant create view to 用户名大写; 删除数据文件sql&gt; alter database datafile &#39;c:\\database\\oradata\\orcl\\cdbwklw.dbf&#39; offline drop; 删除用户sql&gt; drop user 用户名 cascade 删除表空间和数据文件sql&gt; DROP TABLESPACE 表空间名称 INCLUDING CONTENTS AND DATAFILES; 空间管理oracle空间管理文档https://docs.oracle.com/cd/B28359_01/server.111/b28310/tspaces.htm#i1010516 创建临时空间12create temporary tablespace TEMP_YCDBAtempfile &apos;TEMP_YCDBA.dbf&apos; size 5m autoextend on; 创建表空间默认空间最大32G超过需要使用BIGFILE1234567891011121314create BIGFILE tablespace 空间名称 logging datafile &apos;/home/oracle/yc/YCDBA&apos; size 512m autoextend on next 512m maxsize unlimitedextent management local;create temporary tablespace 临时空间名称tempfile &apos;TEMP_YCDBA.dbf&apos; size 5m autoextend on;create user 用户名大写 identified by 密码 default tablespace 空间名称 temporary tablespace 临时空间名称; 导入导出导出权限:EXP_FULL_DATABASE导入权限:IMP_FULL_DATABASE 导出将数据库zxcc完全导出，用户名user 密码passwd 导出到D:\\zxcc.dmp中 本机导出:exp user/passwd@service_name file=d:\\zxcc.dmp full=y 导出其它机器上的数据库:exp user/password@host:port/service_name file=d:\\zxcc.dmp full=y full=y 表示全库导出。full总共有2个可选项yes(y)/no(n)，缺省情况下full=no，这时只会将该用户下的对象导出。 导入imp user/passwd@service_name file=... FULL=Yimp user/password@host:port/service_name file=... FULL=Y 导入更换用户空间, 需要DBA权限imp user/password@host:port/service_name file=... fromuser=%s touser=%s 连接管理查看会话SELECT * from v$SESSION 归档打开归档归档日志查看sql&gt; archive log list; 关闭Oracle实例sql&gt; shutdown immediate; 将Oracle节点启动到 mount状态sql&gt; startup nomount;ORACLE instance started.Total System Global Area 281018368 bytesFixed Size 1267044 bytesVariable Size 113248924 bytesDatabase Buffers 163577856 bytesRedo Buffers 2924544 bytessql&gt; alter database mount;Database altered. 修改归档模式sql&gt; alter database archivelog;Database altered. 并将数据库置于open状态sql&gt; alter database open;Database altered. 指定归档目标sql&gt; alter system set LOG_ARCHIVE_DEST_1=’LOCATION=/archive’;System altered. 归档日志定时删除需要在数据库机器上运行dellog.log123456connect target 用户名/密码run&#123;delete noprompt archivelog all completed before &apos;sysdate-7&apos;;crosscheck archivelog all;delete expired archivelog all;&#125; windows 使用计划任务dellog.bat1rman cmdfile=E:\\delete_archive_log\\dellog.txt &gt; log.log linux 使用crontabdellog.sh1rman cmdfile=/delete_archive_log/dellog.txt &gt; log.log 自动启动vim /etc/orataborcl:/opt/oracle/product/11.2.0/dbhome_1:Y vim /etc/init.d/dbora 添加以下内容123456789101112131415161718192021222324252627282930313233343536373839404142#!/bin/sh# chkconfig: 345 99 10# description: Oracle auto start-stop script.## Set ORA_HOME to be equivalent to the $ORACLE_HOME# from which you wish to execute dbstart and dbshut;## Set ORA_OWNER to the user id of the owner of the # Oracle database in ORA_HOME.ORA_HOME=/opt/oracle/product/11.2.0/dbhome_1ORA_OWNER=oracleexport ORACLE_UNQNAME=orclif [ ! -f $ORA_HOME/bin/dbstart ]then echo &quot;Oracle startup: cannot start&quot; exitficase &quot;$1&quot; in &apos;start&apos;) # Start the Oracle databases: # The following command assumes that the oracle login # will not prompt the user for any values # Remove &quot;&amp;&quot; if you don&apos;t want startup as a background process. su $ORA_OWNER -c &quot;$ORA_HOME/bin/dbstart $ORA_HOME&quot; sleep 5s su $ORA_OWNER -c &quot;$ORA_HOME/bin/lsnrctl start&quot; touch /var/lock/subsys/dbora echo &quot;启动成功, 请检查&quot; ;; &apos;stop&apos;) # Stop the Oracle databases: # The following command assumes that the oracle login # will not prompt the user for any values su $ORA_OWNER -c &quot;$ORA_HOME/bin/dbshut $ORA_HOME&quot; su $ORA_OWNER -c &quot;$ORA_HOME/bin/lsnrctl stop&quot; rm -f /var/lock/subsys/dbora ;;esac~~~~~ 授权chmod 777 /etc/init.d/dbora配置启动chkconfig dbora on测试service dbora restart","link":"","permalink":"https://qooeo.netoracle-management/","tags":[{"name":"oracle","slug":"oracle","permalink":"https://qooeo.net/tags/oracle/"}]},{"title":"centos 6.5 install","date":"2017-03-23T08:30:46.000Z","path":"/centos-6-5-install/","text":"centos 6.5 安装核心配置上台集群换成Linux系统版本: centos6.5 64位硬盘分配: /home 50G Swap 8g 剩余的给分给根目录/组件:最小安装,不要图形界面语言:英文时区:上海 无图形界面 base system servers system management","link":"","permalink":"https://qooeo.netcentos-6-5-install/","tags":[{"name":"centos","slug":"centos","permalink":"https://qooeo.net/tags/centos/"},{"name":"linux","slug":"linux","permalink":"https://qooeo.net/tags/linux/"}]},{"title":"pydev template","date":"2017-03-10T01:22:05.000Z","path":"/pydev-template/","text":"pydev 使用模板新建代码新建模板 使用模板创建文件 例子:接受命令行参数: my argparse # -*- coding: utf-8 -*- ''' $&#123;module&#125; -- $&#123;shortdesc&#125; $&#123;module&#125; -- $&#123;description&#125; @author: user name @copyright: .com All rights reserved. @contact: @email.com @created: $&#123;date&#125; ''' import sys import os import re import json import argparse import platform #=============================================================================== # get_args : 获得命令行参数 #=============================================================================== def get_args(): if len(sys.argv) == 1: print (\"place use:npython3 %s -h\" % sys.argv[0]) #sys.exit(0) parser = argparse.ArgumentParser(description=u'') parser.add_argument('--init', help=u\"init default=False\", default=\"False\", choices=[\"True\", \"False\"], required=True) args = parser.parse_args() args.init = True if args.init == \"True\" else False return args if __name__ == \"__main__\": args = get_args() 类: Module: Class12345678910111213141516171819202122232425# -*- coding: utf-8 -*-'''$&#123;module&#125; -- $&#123;shortdesc&#125;$&#123;module&#125; -- $&#123;description&#125; @author: user name@copyright: .com All rights reserved.@contact: @email.com@created: $&#123;date&#125;'''import sysimport osimport jsonclass $&#123;MyClass&#125;($&#123;object&#125;): ''' $&#123;classdocs&#125; ''' def __init__(self, $&#123;params&#125;): ''' $&#123;Constructor&#125; ''' $&#123;cursor&#125;","link":"","permalink":"https://qooeo.netpydev-template/","tags":[{"name":"python","slug":"python","permalink":"https://qooeo.net/tags/python/"},{"name":"pydev","slug":"pydev","permalink":"https://qooeo.net/tags/pydev/"},{"name":"eclipse","slug":"eclipse","permalink":"https://qooeo.net/tags/eclipse/"}]},{"title":"oracle-install-linux","date":"2017-02-15T07:59:14.000Z","path":"/oracle-install-linux/","text":"linux oracle数据库无图形界面安装1 准备安装路径和用户12345678910111213141516/usr/sbin/groupadd oinstall/usr/sbin/groupadd dba/usr/sbin/useradd -g oinstall -G dba oraclemkdir -p /opt/oraclechown -R oracle:oinstall /opt/oraclechmod -R 775 /opt/oraclemkdir -p /opt/oraInventorychown oracle:oinstall /opt/oraInventorychmod -R 775 /opt/oraInventorymkdir /oradatachown oracle:oinstall /oradatachmod 775 /oradatamkdir /recovery_areachown oracle:oinstall /recovery_areachmod 775 /recovery_area 2 配置linux系统环境root用户：修改 /etc/sysctl.conf 文件，加上如下参数1234567891011121314fs.aio-max-nr = 1048576fs.file-max = 6815744kernel.shmall = 2097152kernel.shmmax = 536870912kernel.shmmni = 4096kernel.sem = 250 32000 100 128net.ipv4.ip_local_port_range = 9000 65500net.core.rmem_default = 262144net.core.rmem_max = 4194304net.core.wmem_default = 262144net.core.wmem_max = 1048586为使上述配置生效而不重启系统，执行如下命令/sbin/sysctl -p 修改用户限制root用户：修改 /etc/security/limits.conf 文件，加上下面的参数1234oracle soft nproc 2047oracle hard nproc 16384oracle soft nofile 1024oracle hard nofile 65536 修改用户验证选项root用户下：修改/etc/pam.d/login文件加上如下参数1session required pam_limits.so 修改用户配置文件root用户下：修改/etc/profile文件加入如下参数：12345678if [ $USER = &quot;oracle&quot; ]; then if [ $SHELL = &quot;/bin/ksh&quot; ]; then ulimit -p 16384 ulimit -n 65536 else ulimit -u 16384 -n 65536 fifi 安装依赖包1yum -y install binutils compat-libcap1 compat-libstdc++ gcc gcc-c++ glibc glibc-devel ksh libgcc libstdc++ libstdc++-devel libaio sysstat libaio-devel elfutils-libelf-devel unixODBC unixODBC-devel, compat-libstdc++-33 3 下载解压安装文件oralce下载地址: http://10.35.252.214/oracle123456su - oraclecd /opt/oracleunzip linux.x64_11gR2_database_1of2.zipunzip linux.x64_11gR2_database_2of2.zipmv database/* ./rm –rf database 4 安装123456789下载安装响应文件修改db.rsporacle.install.db.config.starterdb.password.ALL=system system密码oracle.install.db.config.starterdb.characterSet=ZHS16GBK 中文字符集oracle.install.db.config.starterdb.SID=ORCL ORACLE_SID安装./runInstaller -silent -responseFile /opt/database/db.rsp -ignorePrereq oracle创建表空间第1步：创建临时表空间123456create temporary tablespace user_temp tempfile &apos;D:\\oracle\\oradata\\Oracle9i\\user_temp.dbf&apos; size 50m autoextend on next 50m maxsize 20480m extent management local; 第2步：创建数据表空间1234567create tablespace user_data logging datafile &apos;D:\\oracle\\oradata\\Oracle9i\\user_data.dbf&apos; size 50m autoextend on next 50m maxsize 20480m extent management local; 第3步：创建用户并指定表空间123create user username identified by password default tablespace user_data temporary tablespace user_temp; 第4步：给用户授予权限12grant connect,resource,dba to username;grant create view to username; 简单创建用户(不要在线上环境使用)123create user username identified by password;grant connect, resource, dba to username;grant create view to username; oracle 管理12345678ssh 登陆oracl服务器切换到oracle安装用户: su oracle进入oracle后台 : sqlplus / as sysdba关闭数据库 : shutdown immediate;启动数据库 : startup mount;修改数据库状态打开 : alter database open;修改密码策略永不过期: ALTER PROFILE DEFAULT LIMIT PASSWORD_LIFE_TIME UNLIMITED; 安装中的问题交换空间为01234cd /dd if=/dev/zero of=swapfile bs=1024 count=1000000mkswap swapfileswapon swapfile db.rsp文件 #------------------------------------------------------------------------------- # Do not change the following system generated value. #------------------------------------------------------------------------------- oracle.install.responseFileVersion=/oracle/install/rspfmt_dbinstall_response_schema_v11_2_0 #------------------------------------------------------------------------------- # The installation option can be one of the following # 1. INSTALL_DB_SWONLY # 2. INSTALL_DB_AND_CONFIG # 3. UPGRADE_DB #------------------------------------------------------------------------------- oracle.install.option=INSTALL_DB_AND_CONFIG #------------------------------------------------------------------------------- # This variable holds the hostname of the system as set by the user. # It can be used to force the installation to use an alternative # hostname rather than using the first hostname found on the system # (e.g., for systems with multiple hostnames and network interfaces). #------------------------------------------------------------------------------- ORACLE_HOSTNAME=localhost #------------------------------------------------------------------------------- # Unix group to be set for the inventory directory. #------------------------------------------------------------------------------- UNIX_GROUP_NAME=oinstall #------------------------------------------------------------------------------- # Inventory location. #------------------------------------------------------------------------------- INVENTORY_LOCATION=/opt/oraInventory #------------------------------------------------------------------------------- # Specify the languages in which the components will be installed. # # en : English ja : Japanese # fr : French ko : Korean # ar : Arabic es : Latin American Spanish # bn : Bengali lv : Latvian # pt_BR: Brazilian Portuguese lt : Lithuanian # bg : Bulgarian ms : Malay # fr_CA: Canadian French es_MX: Mexican Spanish # ca : Catalan no : Norwegian # hr : Croatian pl : Polish # cs : Czech pt : Portuguese # da : Danish ro : Romanian # nl : Dutch ru : Russian # ar_EG: Egyptian zh_CN: Simplified Chinese # en_GB: English (Great Britain) sk : Slovak # et : Estonian sl : Slovenian # fi : Finnish es_ES: Spanish # de : German sv : Swedish # el : Greek th : Thai # iw : Hebrew zh_TW: Traditional Chinese # hu : Hungarian tr : Turkish # is : Icelandic uk : Ukrainian # in : Indonesian vi : Vietnamese # it : Italian # # Example : SELECTED_LANGUAGES=en,fr,ja #------------------------------------------------------------------------------- SELECTED_LANGUAGES=en,zh_CN #------------------------------------------------------------------------------- # Complete path of the Oracle Home #------------------------------------------------------------------------------- ORACLE_HOME=/opt/oracle/product/11.2.0/dbhome_1 #------------------------------------------------------------------------------- # Complete path of the Oracle Base. #------------------------------------------------------------------------------- ORACLE_BASE=/opt/oracle #------------------------------------------------------------------------------- # Installation Edition of the component. # # The value should contain only one of these choices. # EE : Enterprise Edition # SE : Standard Edition # SEONE : Standard Edition One # PE : Personal Edition (WINDOWS ONLY) #------------------------------------------------------------------------------- oracle.install.db.InstallEdition=EE #------------------------------------------------------------------------------- # This property is considered only if InstallEdition is EE. # # true : Components mentioned as part of 'customComponents' property # are considered for install. # false : Value for 'customComponents' is not considered. #------------------------------------------------------------------------------- oracle.install.db.isCustomInstall=false #------------------------------------------------------------------------------- # This property is considered only if 'IsCustomInstall' is set to true # # Description: List of Enterprise Edition Options you would like to install. # # The following choices are available. You may specify any # combination of these choices. The components you choose should # be specified in the form \"internal-component-name:version\" # Below is a list of components you may specify to install. # # oracle.oraolap:11.2.0.0.2 - Oracle OLAP # oracle.rdbms.dm:11.2.0.0.2 - Oracle Data Mining RDBMS Files # oracle.rdbms.dv:11.2.0.0.2 - Oracle Database Vault option # oracle.rdbms.lbac:11.2.0.0.2 - Oracle Label Security # oracle.rdbms.partitioning:11.2.0.0.2 - Oracle Partitioning # oracle.rdbms.rat:11.2.0.0.2 - Oracle Real Application Testing # oracle.clrintg.ode_net:11.2.0.0.2 - Oracle Database Extensions for .NET 1.x (Windows) # oracle.clrintg.ode_net_2:11.2.0.0.2 - Oracle Database Extensions for .NET 2.0 (Windows) #------------------------------------------------------------------------------- oracle.install.db.customComponents= #------------------------------------------------------------------------------- oracle.install.db.DBA_GROUP=dba #------------------------------------------------------------------------------- oracle.install.db.OPER_GROUP=oinstall #------------------------------------------------------------------------------- # This variable represents the cluster node names selected by the . # user for installation #------------------------------------------------------------------------------- oracle.install.db.CLUSTER_NODES= #------------------------------------------------------------------------------- # One of the following # - GENERAL_PURPOSE # - TRANSACTION_PROCESSING # - DATAWAREHOUSE #------------------------------------------------------------------------------- oracle.install.db.config.starterdb.type=GENERAL_PURPOSE #------------------------------------------------------------------------------- # Global Database Name #------------------------------------------------------------------------------- oracle.install.db.config.starterdb.globalDBName=xfdsj #------------------------------------------------------------------------------- # The Starter Database SID #------------------------------------------------------------------------------- oracle.install.db.config.starterdb.SID= #------------------------------------------------------------------------------- # Database character set # # One of the following # AL32UTF8, WE8ISO8859P15, WE8MSWIN1252, EE8ISO8859P2, # EE8MSWIN1250, NE8ISO8859P10, NEE8ISO8859P4, BLT8MSWIN1257, # BLT8ISO8859P13, CL8ISO8859P5, CL8MSWIN1251, AR8ISO8859P6, # AR8MSWIN1256, EL8ISO8859P7, EL8MSWIN1253, IW8ISO8859P8, # IW8MSWIN1255, JA16EUC, JA16EUCTILDE, JA16SJIS, JA16SJISTILDE, # KO16MSWIN949, ZHS16GBK, TH8TISASCII, ZHT32EUC, ZHT16MSWIN950, # ZHT16HKSCS, WE8ISO8859P9, TR8MSWIN1254, VN8MSWIN1258 #------------------------------------------------------------------------------- oracle.install.db.config.starterdb.characterSet= #------------------------------------------------------------------------------- # Specify the total memory allocation for the database. (in MB) # Value should be at least 256 MB, and should not exceed the # total physical memory available on the system. # Example: oracle.install.db.config.starterdb.memoryLimit=40 #------------------------------------------------------------------------------- oracle.install.db.config.starterdb.memoryLimit=738 oracle.install.db.config.starterdb.memoryOption=true #------------------------------------------------------------------------------- # This variable controls whether to load Example Schemas onto # the starter database or not. #------------------------------------------------------------------------------- oracle.install.db.config.starterdb.installExampleSchemas=false #------------------------------------------------------------------------------- # This include enabling audit settings, configuring password # profiles and revoking some grants to public. These settings # are provided by default. You may choose to disable all. #------------------------------------------------------------------------------- oracle.install.db.config.starterdb.enableSecuritySettings=true #------------------------------------------------------------------------------- oracle.install.db.config.starterdb.password.ALL= #------------------------------------------------------------------------------- oracle.install.db.config.starterdb.password.SYS= #------------------------------------------------------------------------------- oracle.install.db.config.starterdb.password.SYSTEM= #------------------------------------------------------------------------------- oracle.install.db.config.starterdb.password.SYSMAN= #------------------------------------------------------------------------------- oracle.install.db.config.starterdb.password.DBSNMP= #------------------------------------------------------------------------------- # Can be one of the following # 1. GRID_CONTROL # 2. DB_CONTROL # oracle.install.db.config.starterdb.control=DB_CONTROL #------------------------------------------------------------------------------- # Determines the Management Service to use if Grid Control # is selected to manage the database. #------------------------------------------------------------------------------- oracle.install.db.config.starterdb.gridcontrol.gridControlServiceURL= #------------------------------------------------------------------------------- # Determines whether to receive email notification for # critical alerts when using DB control. #------------------------------------------------------------------------------- oracle.install.db.config.starterdb.dbcontrol.enableEmailNotification=false #------------------------------------------------------------------------------- oracle.install.db.config.starterdb.dbcontrol.emailAddress= #------------------------------------------------------------------------------- oracle.install.db.config.starterdb.dbcontrol.SMTPServer= #------------------------------------------------------------------------------- oracle.install.db.config.starterdb.automatedBackup.enable=false #------------------------------------------------------------------------------- oracle.install.db.config.starterdb.automatedBackup.osuid= #------------------------------------------------------------------------------- oracle.install.db.config.starterdb.automatedBackup.ospwd= #------------------------------------------------------------------------------- # Can be one of the following # - FILE_SYSTEM_STORAGE # - ASM_STORAGE #------------------------------------------------------------------------------- oracle.install.db.config.starterdb.storageType=FILE_SYSTEM_STORAGE #------------------------------------------------------------------------------- # Database file location: # directory for datafiles, control files, redo logs. # # Applicable only when oracle.install.db.config.starterdb.storage=FILE_SYSTEM_STORAGE #------------------------------------------------------------------------------- oracle.install.db.config.starterdb.fileSystemStorage.dataLocation=/opt/oracle/oradata #------------------------------------------------------------------------------- # Backup and recovery location # # Applicable only when oracle.install.db.config.starterdb.storage=FILE_SYSTEM_STORAGE #------------------------------------------------------------------------------- oracle.install.db.config.starterdb.fileSystemStorage.recoveryLocation= #------------------------------------------------------------------------------- # Name of ASM disk group to be used for storage. # # Applicable only when oracle.install.db.config.starterdb.storageType=ASM_STORAGE #------------------------------------------------------------------------------- oracle.install.db.config.asm.diskGroup= #------------------------------------------------------------------------------- # Password for ASMSNMP user of the ASM instance. # # Applicable only when oracle.install.db.config.starterdb.storage=ASM_STORAGE #------------------------------------------------------------------------------- oracle.install.db.config.asm.ASMSNMPPassword= #------------------------------------------------------------------------------ # Specify the My Oracle Support Account Username. # # Example : MYORACLESUPPORT_USERNAME=metalink #------------------------------------------------------------------------------ MYORACLESUPPORT_USERNAME= #------------------------------------------------------------------------------ # Specify the My Oracle Support Account Username password. # # Example : MYORACLESUPPORT_PASSWORD=password #------------------------------------------------------------------------------ MYORACLESUPPORT_PASSWORD= #------------------------------------------------------------------------------ # Specify whether to enable the user to set the password for # My Oracle Support credentials. The value can be either true or false. # If left blank it will be assumed to be false. # # Example : SECURITY_UPDATES_VIA_MYORACLESUPPORT=true #------------------------------------------------------------------------------ SECURITY_UPDATES_VIA_MYORACLESUPPORT=false #------------------------------------------------------------------------------ # Specify whether user wants to give any proxy details for connection. # The value can be either true or false. If left blank it will be assumed # to be false. # # Example : DECLINE_SECURITY_UPDATES=false #------------------------------------------------------------------------------ DECLINE_SECURITY_UPDATES=true #------------------------------------------------------------------------------ # Specify the Proxy server name. Length should be greater than zero. # # Example : PROXY_HOST=proxy.domain.com #------------------------------------------------------------------------------ PROXY_HOST= #------------------------------------------------------------------------------ # Specify the proxy port number. Should be Numeric and atleast 2 chars. # # Example : PROXY_PORT=25 #------------------------------------------------------------------------------ PROXY_PORT=","link":"","permalink":"https://qooeo.netoracle-install-linux/","tags":[{"name":"oracle","slug":"oracle","permalink":"https://qooeo.net/tags/oracle/"}]},{"title":"yuncai-dev-doc","date":"2017-02-15T06:49:25.000Z","path":"/yuncai-dev-doc/","text":"oracle 创建大数据空间 12345678910111213141516171819202122232425262728293031create BIGFILE tablespace YCDBA logging datafile &apos;/home/oracle/yc/YCDBA&apos; size 512m autoextend on next 512m maxsize unlimitedextent management local;create temporary tablespace TEMP_YCDBAtempfile &apos;TEMP_YCDBA.dbf&apos; size 5m autoextend on;create BIGFILE tablespace YCDATA logging datafile &apos;/home/oracle/yc/YCDATA&apos; size 512m autoextend on next 512m maxsize unlimitedextent management local;create temporary tablespace TEMP_YCDATAtempfile &apos;TEMP_YCDATA.dbf&apos; size 5m autoextend on;create user YCDBA identified by YCDBA default tablespace YCDBA temporary tablespace TEMP_YCDBA;create user YCDATA identified by password default tablespace YCDATA temporary tablespace TEMP_YCDATA;","link":"","permalink":"https://qooeo.netyuncai-dev-doc/","tags":[{"name":"oracle","slug":"oracle","permalink":"https://qooeo.net/tags/oracle/"}]},{"title":"software","date":"2017-02-13T02:58:55.000Z","path":"/software/","text":"1. 准备1. windows推荐装win10 64位 VOL专业版/企业版 系统下载http://msdn.itellyou.cn/ ed2k://|file|cn_windows_10_multiple_editions_version_1607_updated_jul_2016_x64_dvd_9056935.iso|4347183104|35EA5DB0F3BB714F5CE0740FB89D82D1|/ 2. windows上开发环境推荐使用32位, x86为32位 3. linux系统使用64位,x64为64位 2. 工具1. xshell ssh工具 1. 官网 https://www.netsarang.com/products/xsh_overview.html 2. xftp ftp工具 1. 官网 https://www.netsarang.com/products/xfp_overview.html 3. sshfs 把linux机器映射为网络硬盘,方便在windows上操作 1. 使用文档 http://igikorn.com/sshfs-windows-8/ 4. navicate 数据库工具 1. 官网 https://www.navicat.com/ 2. 文档 https://www.navicat.com.cn/manual/pdf_manual/cn/navicat/win_manual/navicat_cs.pdf 3. 快捷键 1. Ctrl + q 打开查询窗口 2. Ctrl + r 执行sql 3. F5刷新 4. 其他 1. 表名的修改没用确认按钮,取消ESC 2. 有些物视是看不到的,当时可以通过sql查询出数据 3. 写sql时默认是查询用户下的表,其他模式要带所在的模式 5. sublime 文本编辑器 1. 官网 https://www.sublimetext.com/ 2. 文档 http://lucida.me/blog/sublime-text-complete-guide/ 6. RegexBuddy 正则表达式 1. 官网 https://www.regexbuddy.com/ 2. 文档 http://www.cnblogs.com/Zjmainstay/p/regex-tool-regexbuddy.html 7. window系统知识 1. 命令行 cmd/powershell 1. 查看本机网卡的配置 ipconfig 2. 清空域名缓存 ipconfig /flushdns 3. win10 redstore 更新可以在cmd中使用linux命令, 必须为win10专业版和企业版 1. wget 2. curl 4. bat 命令行下可运行的文件,编写bat文件要注意 1. bat文件换行必须使用\\r\\n,也叫CR+LF 2. 必须要进入然工作目录,cmd 默认是C盘,如要进入d:\\nginx 要进行两步 1. cd d:\\nginx 2. d: 5. 其他 cmd命令行输出的编码是gbk编码,所以utf8编码的中文内容会乱码 2. 注册表 regedit 3. 服务 services.msc 1. windows禁用自动更新 4. 计划任务 1. 开机自动启动nginx 5. 防火墙 1. 端口 HTTP 80，FTP 20/21，Telnet 23，SMTP 25，DNS 53 8. linux系统知识, 防火墙,网络 1. 网络 1. 域名 www.vastio.com 二级域名.一级域名.顶级域名 2. 域名服务器 8.8.8.8/114.114.114/路由器ip 3. ip 1. 公网地址 2. 私网地址 4. 子网掩码 1. 255.255.0.0 5. 路由 1. 路由表 2. 防火墙 1. 进/出 2. 转发 9. 代码风格 1. 谷歌代码规范 http://zh-google-styleguide.readthedocs.io/en/latest/contents/ 2. 文件编码 utf8 3. 换行使用Unix风格\\n也就是LF 10. markdown 1. markdown风格 https://docs.gitlab.com/ee/user/markdown.html 11. Git 版本管理 1. 官网 https://git-scm.com/ 2. 文档 https://git-scm.com/book/zh/v2 3. pull 和fetch的区别 : https://www.oschina.net/translate/git-fetch-and-merge 12. TortoiseGit/SourceTree Git gui工具 1. 官网 https://tortoisegit.org/ 2. 文档 http://www.cnblogs.com/qiantuwuliang/archive/2010/12/29/1920723.html 3. TortoiseGit 解决冲突 http://blog.csdn.net/jerome_s/article/details/44992745 4. SourceTree mac推荐使用,需要注册账号 13. winmerge 文件/文件夹比较 1. 官网 http://winmerge.org/?lang=en 2. 合并后会生成备份文件,在Options-&gt;backup files 取消Append .bak -extension 14. docker+Kitematic 本机开发环境配置(需要路由器翻墙,公司wifi V-Guest),公安网环境下目前还无法使用 1. docker 1. 官网 https://www.docker.com/ 2. docker 优势介绍 http://dockone.io/article/389 3. 文档 https://github.com/yeasy/docker_practice 2. kitematic 提供图像界面管理docker 1. 官网 https://kitematic.com/ 2. 使用需要创建账号 https://hub.docker.com/ 15. 其他重型IDE 1. eclipse 1. pydev 开发 2. startexplorer http://basti1302.github.io/startexplorer/ 在eclipse中快速打开文件夹和cmd 3. eclipse theme http://www.eclipsecolorthemes.org eclipse主题插件 2. jetbrains https://www.jetbrains.com 1. PyCharm python 开发 2. WebStorm web开发 3. PhpStorm php web开发 3. aptana http://www.aptana.com/ 1. python web 开发 4. atom https://atom.io/ 5. visual studio 16. 文档管理 1. Evernot 2. 有道云笔记 17. chrome 插件 1. 插件离线下载 http://chrome-extension-downloader.com/ 2. 插件离线安装 http://www.cnplugins.com/zhuanti/how-to-make-crx-install.html 3. sense ElasticSearch快速调试 https://chrome.google.com/webstore/detail/sense-beta/lhjgkmllcaadmopgmanpapmpjgmfcfig?utm_source=chrome-app-launcher-info-dialog 4. JSONView 友好查看json数据 https://chrome.google.com/webstore/detail/jsonview/chklaanhfefbnpoihckbnefhakgolnmc?utm_source=chrome-app-launcher-info-dialog 5. 谷歌翻译 划词翻译 https://chrome.google.com/webstore/detail/google-translate/aapbdbdomjkkjkaonfhkkikfgjllcleb?utm_source=chrome-app-launcher-info-dialog 6. ColorZilla ccs调试,颜色选择 https://chrome.google.com/webstore/detail/colorzilla/bhlhnicpbhignbdhedgjhgdocnmhomnp?utm_source=chrome-app-launcher-info-dialog 7. Axure 扩展 https://chrome.google.com/webstore/detail/axure-rp-extension-for-ch/dogkpdfcklifaemcdfbildhcofnopogp?utm_source=chrome-app-launcher-info-dialog 8. Advanced REST client api请求调试 https://chrome.google.com/webstore/detail/advanced-rest-client/hgmloofddffdnphfgcellkdfbfbjeloo?utm_source=chrome-app-launcher-info-dialog 9. ad block 屏蔽广告 https://chrome.google.com/webstore/detail/gighmmpiobklfepjocnamgkkbiglidom?utm_source=chrome-app-launcher-info-dialog 10. 印象笔记插件 https://chrome.google.com/webstore/detail/pioclpoplcdbaefihamjohnefbikjilc?utm_source=chrome-app-launcher-info-dialog","link":"","permalink":"https://qooeo.netsoftware/","tags":[{"name":"软件","slug":"软件","permalink":"https://qooeo.net/tags/软件/"}]},{"title":"server_install","date":"2017-02-06T03:12:37.000Z","path":"/server-install/","text":"linux123456789101112131415161718192021222324252627282930313233343536373839一 nginx nginx需要从源码编译 安装目录/usr/local/nginx cd /root/ wget http://software.vastio.com/nginx-1.7.9.rar tar -xf nginx-1.7.9.rar cd nginx yum -y install gcc pcre-devel openssl openssl-devel ./configure --prefix=/usr/local/nginx make make install 安装后路径/usr/local/nginx/sbin/nginx nginx 重启 nginx -s reload 二 tomcate 目录/opt/ cd /opt wget http://software.vastio.com/tomcat-7.0.27.tar jdk1.7 下oracle数据库连接经常启动不了 配置 tomcate 下的 conf/env.properties db.url=jdbc:oracle:thin:@ip:1521:服务名 db.username=用户名 db.password=密码 关闭bash bin/shutdown.sh 启动bash bin/startup.sh三 设置无密码登陆 ssh-keygen -t rsa cd ~/.ssh 拷贝公钥到其它机器(为了实现能互相无密码登陆) scp id_rsa root@pps_*_*_*:~/.ssh/ scp id_rsa.pub root@pps_*_*_*:~/.ssh/ 在所有机器上执行(包括本机器) cd ~/.ssh cat id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys chmod 700 -R ~/.ssh chmod 600 authorized_keys 其它工具12345678910111213141516171819202122232425262728293031323334353637一 yum cd /etc/yum.repos.d二 oracle 11g 数据库密码默认180天 ALTER PROFILE DEFAULT LIMIT PASSWORD_LIFE_TIME UNLIMITED; 三 oracle 数据库连接客户端 1. navicat 创建表时候表名使用名空间加双引号,并且表名大写 2. oracle client 3. plsql, 不要 plsql执行大量的 sql语句,运行不起来 四 文本编辑器 1. notepad++ 2. sublime 五 web服务器 1. nginx 2. tomcate 六 Linux 连接客户端 1. xshell 2. xftp 七 git客户端(windows) 0. git windows环境 https://git-scm.com/ 1. sourcetree https://www.sourcetreeapp.com/ 2. tortoisegit https://tortoisegit.org/download/八 代理相关 yum 使用代理 /etc/yum.conf proxy=http://ip:port/ wget 使用代理 export http_proxy=http://ip:port 九 mount 命令 mount -t cifs -o username=root,password= //10.15.100.151/centos /root/centos","link":"","permalink":"https://qooeo.netserver-install/","tags":[{"name":"服务器","slug":"服务器","permalink":"https://qooeo.net/tags/服务器/"}]},{"title":"data_input","date":"2017-02-06T03:09:50.000Z","path":"/data-input/","text":"","link":"","permalink":"https://qooeo.netdata-input/","tags":[]},{"title":"Hello World","date":"2017-01-08T08:46:42.000Z","path":"/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post $ hexo new \"My New Post\" More info: Writing Run serverP1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"","permalink":"https://qooeo.nethello-world/","tags":[]},{"title":"oracle_xe","date":"2016-12-26T03:00:50.000Z","path":"/oracle-xe/","text":"oracle xeOracle Database 11g Express Edition (Oracle Database XE) is an entry-level, small-footprint database based on the Oracle Database 11g Release 2 code base. It’s free to develop, deploy, and distribute; fast to download; and simple to administer. This edition suitable for persona, this install package about 300m, supported version win32, win64, linux64. download http://www.oracle.com/technetwork/database/database-technologies/express-edition/downloads/index.html I install win64 version 1. reday installunzip OracleXE112_Win64.zip 2. installingcd Disk1run setup.exe as administratorThe install Path use ORACLE_HOMEand you need set the system user password 3. finish install 4. check success? 5. set system variable pathORACLE_SID=xeORACLE_HOME=C:\\oraclexe\\app\\oracle\\product\\11.2.0\\serverLD_LIBRARY_PATH=%ORACLE_HOME%\\libpath=%ORACLE_HOME%\\bin;LD_LIBRARY_PATH; 6. restart systemyou need to restart system after you installed oracle-xe","link":"","permalink":"https://qooeo.netoracle-xe/","tags":[{"name":"oracle","slug":"oracle","permalink":"https://qooeo.net/tags/oracle/"}]},{"title":"cherrypy","date":"2016-07-28T08:30:03.000Z","path":"/cherrypy/","text":"# -*- coding：utf-8 -*- # json数据编辑功能 import cherrypy import json import sys import os import urllib.request import time import re import codecs import json sys.path.append(\"../\") from mako.template import Template from mako.lookup import TemplateLookup from cherrypy.lib import auth_basic output_dir = \"work_path\" lookup = TemplateLookup(directories=['static'], input_encoding='utf-8') USERS = &#123;'vastio':'vastio'&#125; #=============================================================================== # save_json : 保存 #=============================================================================== def save_json(data, file_name): if data: output_file = codecs.open(\"%s/%s\" % (output_dir, file_name), \"w\", \"utf8\") text = json.dumps(data, indent=1, sort_keys=True, ensure_ascii=False) output_file.write(text) output_file.close() #=============================================================================== # get_json : 读取 #=============================================================================== def get_json(file_name): input_file = codecs.open(\"%s/%s\" % (output_dir, file_name), \"r\", \"utf8\") text = input_file.read() data = json.loads(text) input_file.close() return data #=========================================================================== # get_crontab #=========================================================================== def get_crontab(): crontab = get_json(\"crontab.json\") return crontab #=============================================================================== # save_crontab #=============================================================================== def save_crontab(crontab): save_json(crontab, \"crontab.json\") #=============================================================================== # error_page_404 : 404 error #=============================================================================== def error_page_404(status, message, traceback, version): return \"404 Error!\" #=============================================================================== # error_page_401 : 401 error #=============================================================================== def error_page_401(status, message, traceback, version): return \"login error 401 Error!\" #=============================================================================== # validate_password : basic 认证 #=============================================================================== def validate_password(realm, username, password): return True if username in USERS and USERS[username] == password: return True return False cherrypy.config.update(&#123;'server.socket_port':8080, \"server.socket_host\": \"0.0.0.0\", \"engine.autoreload_on\": True&#125;) cherrypy.config.update(&#123;'error_page.404': error_page_404&#125;) cherrypy.config.update(&#123;'error_page.401': error_page_401&#125;) #=============================================================================== # OverviewController #=============================================================================== class OverviewController(): #=========================================================================== # get_zrqk : 昨日情况 #=========================================================================== def get_zrqk(self): key_list = [\"110呼入\",\"有效报警\",\"CK\",\"移车警情\",\"直处\",\"下发\",\"违法犯罪\",\"交通\",\"求助\",\"举报\",\"纠纷\"] old_data = get_json(\"zrqk.json\") value_list = [] for key in key_list: if key in old_data: value_list.append(old_data[key]) else: value_list.append(0) return key_list, value_list #=========================================================================== # get_zrqk : 盘查入所拘留 #=========================================================================== def get_pc_rs_jl(self): key_list = [\"今日盘查\",\"今日入所\",\"今日拘留\",\"今日取保\",\"今日逮捕\"] old_data = get_json(\"pc_rs_jl.json\") value_list = [] for key in key_list: if key in old_data: value_list.append(old_data[key]) else: value_list.append(0) return key_list, value_list #=========================================================================== # get_jq_category : 警情分类 #=========================================================================== def get_jq_category(self): key_list = [\"交通类警情\",\"处警量\",\"接警量\",\"求助类警情\",\"违法犯罪警情\"] old_data = get_json(\"jq_category.json\") zr_value_list = [] tq_value_list = [] for key in key_list: if key in old_data[\"同期\"]: tq_value_list.append(old_data[\"同期\"][key]) else: tq_value_list.append(0) if key in old_data[\"昨日\"]: zr_value_list.append(old_data[\"昨日\"][key]) else: zr_value_list.append(0) return key_list, zr_value_list, tq_value_list #=========================================================================== # get_crontab #=========================================================================== def get_crontab(self): try: crontab = get_crontab() except: crontab = &#123;&#125; crontab_list = [\"zrqk_crontab\", \"jq_category_crontab\", \"pc_rs_jl_crontab\"] result = [] for key in crontab_list: if key not in crontab: result.append(False) else: result.append(crontab[key]) return result #=========================================================================== # save_crontab #=========================================================================== def save_crontab(self, key, value): crontab = get_crontab() if value in [True, \"1\", \"true\", \"True\", \"TRUE\", \"yes\", \"YES\", \"Yes\", 1]: tmp_value = True else: tmp_value = False crontab[key] = tmp_value save_crontab(crontab) #=========================================================================== # index #=========================================================================== @cherrypy.expose def index(self): zrqk_key_list, zrqk_value_list = self.get_zrqk() pc_rs_jl_key_list, pc_rs_jl_value_list = self.get_pc_rs_jl() jq_category_key_list, zr_value_list, tq_value_list = self.get_jq_category() tmpl = lookup.get_template(\"index_table.html\") zrqk_crontab, jq_category_crontab, pc_rs_jl_crontab = self.get_crontab() print (zrqk_crontab, jq_category_crontab, pc_rs_jl_crontab) return tmpl.render(TATLE_TEMPLATE_TEXT=\"吴江大屏\", zrqk_key_list=zrqk_key_list, zrqk_value_list=zrqk_value_list, pc_rs_jl_key_list=pc_rs_jl_key_list, pc_rs_jl_value_list=pc_rs_jl_value_list, jq_category_key_list=jq_category_key_list, zr_value_list=zr_value_list, tq_value_list=tq_value_list, zrqk_crontab=zrqk_crontab, jq_category_crontab=jq_category_crontab, pc_rs_jl_crontab=pc_rs_jl_crontab) #=========================================================================== # poi 取得 #=========================================================================== @cherrypy.expose @cherrypy.tools.json_in() @cherrypy.tools.json_out() def update(self, name = None, **kwargs): result = &#123;&#125; if name == \"zrqk\": self.save_crontab(\"zrqk_crontab\", kwargs[\"crontab\"]) del kwargs[\"crontab\"] save_json(kwargs, \"zrqk.json\") result['data'] = kwargs result['status'] = \"success\" result['code'] = 200 elif name == \"pc_rs_jl\": self.save_crontab(\"pc_rs_jl_crontab\", kwargs[\"crontab\"]) del kwargs[\"crontab\"] save_json(kwargs, \"pc_rs_jl.json\") result['data'] = kwargs result['status'] = \"success\" result['code'] = 200 elif name == \"jq_category\": self.save_crontab(\"jq_category_crontab\", kwargs[\"crontab\"]) del kwargs[\"crontab\"] tmp_value = &#123;&#125; for tmp_key in kwargs: key_one, key_two = tmp_key.split(\"_\") if key_one not in tmp_value: tmp_value[key_one] = &#123;&#125; tmp_value[key_one][key_two] = kwargs[tmp_key] save_json(tmp_value, \"jq_category.json\") result['data'] = tmp_value result['status'] = \"success\" result['code'] = 200 else: pass return result overview = OverviewController() parent_dir = os.path.dirname(os.path.abspath(__file__)) parent_dir = parent_dir.replace(\"\\\", \"/\") static_dir = \"%s/%s\" % (parent_dir, 'static/') print (parent_dir, static_dir) conf = &#123; 'crime': &#123;'request.dispatch': cherrypy.dispatch.RoutesDispatcher(), &#125;, '/': &#123; 'tools.auth_basic.on': True, 'tools.auth_basic.realm': 'wu jiang', 'tools.auth_basic.checkpassword': validate_password &#125;, '/static': &#123; 'tools.staticdir.on': True, 'tools.staticdir.root': parent_dir, 'tools.staticdir.dir': 'static', 'tools.staticdir.index': 'index.html' &#125; &#125; if __name__=='__main__': cherrypy.quickstart(overview, '/', config=conf)","link":"","permalink":"https://qooeo.netcherrypy/","tags":[{"name":"python","slug":"python","permalink":"https://qooeo.net/tags/python/"},{"name":"cherrypy","slug":"cherrypy","permalink":"https://qooeo.net/tags/cherrypy/"}]},{"title":"markdown-images","date":"2016-07-14T14:36:46.000Z","path":"/markdown-images/","text":"","link":"","permalink":"https://qooeo.netmarkdown-images/","tags":[]},{"title":"math and uml","date":"2016-07-05T16:05:45.000Z","path":"/math-and-uml/","text":"$$E=mc^2$$ $$\\sum_{i=1}^n a_i=0$$$$\\sum ^ {j-1}{k=0}{\\widehat{\\gamma} {kj} z k } $$ $$\\Gamma(z) = \\int_0^\\infty t^{z-1}e^{-t}dt\\,.$$ @found \"You\", -> @message \"Think\", -> @message \"Write your idea\", \"JUMLY\", -> @create \"Diagram\"","link":"","permalink":"https://qooeo.netmath-and-uml/","tags":[]},{"title":"About","date":"2016-07-04T14:56:57.000Z","path":"/About/","text":"site sourceanother domain:https://qooeo.netgithub backup site:http://ylkjick532428.github.io/honeyblog/GitHub: https://github.com/ylkjick532428","link":"","permalink":"https://qooeo.netAbout/","tags":[]},{"title":"README","date":"2016-07-04T14:27:35.000Z","path":"/README/","text":"site sourceanother domain:https://qooeo.netgithub backup site:http://ylkjick532428.github.io/honeyblog/GitHub: https://github.com/ylkjick532428","link":"","permalink":"https://qooeo.netREADME/","tags":[]}]